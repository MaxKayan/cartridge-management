{"version":3,"sources":["components/CartridgesTable/CartridgesTable.jsx","components/SuppliesTable/SuppliesTable.jsx","components/SuppliesEditable/localization.js","components/OrdersTable/FinishedStatus.jsx","components/OrdersTable/InWorkStatus.jsx","components/OrdersTable/OrdersTable.jsx","components/SuppliesEditable/SuppliesEditable.jsx","components/NavBar/NavBar.jsx","pages/Test.jsx","api/api.js","api/orderDao.js","api/supplyDao.js","api/cartridgeDao.js","pages/Home.jsx","App.js","serviceWorker.js","index.js"***REMOVED***,"names":["useStyles","makeStyles","theme","root","borderTop","tables","borderSize","borderTopColor","palette","primary","light","borderTopStyle","header","backgroundColor","dark","color","common","white","CartridgesTable","props","classes","cartridges","TableContainer","className","component","Paper","elevation","useTheme","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","row","key","name","scope","manufacturer","count","withStyles","head","outRow","error","inRow","success","localization","pagination","labelDisplayedRows","labelRowsSelect","toolbar","nRowsSelected","searchTooltip","searchPlaceholder","exportTitle","exportAriaLabel","exportName","actions","body","emptyDataSourceMessage","addTooltip","deleteTooltip","editTooltip","filterRow","filterTooltip","editRow","deleteText","cancelTooltip","saveTooltip","FinishedStatus","Tooltip","title","CheckCircle","InWorkStatus","LocalShipping","OrdersTable","data","cartridgesChoices","forEach","item","isLoading","length","columns","field","initialEditValue","lookup","true","false","render","rowData","finished","type","editable","emptyValue","components","Container","options","exportButton","actionsColumnIndex","icon","tooltip","undefined","disabled","onClick","event","console","log","alert","number","onRowAdd","newData","Promise","resolve","onRowUpdate","onRowDelete","oldData","prepareData","supply","out","SuppliesEditable","handleSupplyDelete","handleSupplyUpdate","handleSupplyCreate","rowStyles","tinycolor","lighten","rowStyle","id","flexGrow","NavBar","history","useHistory","AppBar","position","Toolbar","variant","Typography","arrow","IconButton","push","window","location","reload","Http","fontSize","SupervisedUserCircle","Test","api","axios","create","baseURL","responseType","ordersDao","getAll","a","get","response","order","post","update","put","delete","supplyDao","supplies","cartridgeDao","Home","state","cartridgesData","suppliesData","ordersData","dispError","msg","enqueueSnackbar","dispSuccess","dispMsg","handleRefresh","catch","reason","then","value","setState","this","Grid","container","spacing","xs","lg","Component","withSnackbar","App","navbarTitle","responsiveFontSizes","createMuiTheme","blue","secondary","green","notistackRef","React","createRef","onClickDismiss","current","closeSnackbar","maxSnack","ref","action","Close","style","paddingTop","maxWidth","path","exact","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"***REMOVED***,"mappings":"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","file":"static/js/main.3c53f25e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport {\r\n    TableContainer,\r\n    Table,\r\n    TableHead,\r\n    TableRow,\r\n    TableCell,\r\n    TableBody,\r\n    Paper,\r\n***REMOVED*** from \"@material-ui/core\";\r\n\r\nimport { makeStyles, useTheme ***REMOVED*** from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        borderTop: theme.tables.borderSize,\r\n        borderTopColor: theme.palette.primary.light,\r\n        borderTopStyle: \"solid\",\r\n    ***REMOVED***,\r\n    header: {\r\n        backgroundColor: theme.palette.primary.dark,\r\n        color: theme.palette.common.white,\r\n    ***REMOVED***,\r\n***REMOVED***));\r\n\r\nfunction CartridgesTable(props) {\r\n    const classes = useStyles();\r\n    const { cartridges ***REMOVED*** = props;\r\n\r\n    return (\r\n        <TableContainer\r\n            className={classes.root***REMOVED***\r\n            component={Paper***REMOVED***\r\n            elevation={useTheme().tables.elevation***REMOVED***>\r\n            <Table aria-label=\"cartridges table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Производитель</TableCell>\r\n                        <TableCell align=\"right\">Наименование</TableCell>\r\n                        <TableCell align=\"right\">Количество</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                ***REMOVED***cartridges.map((row) => (\r\n                        <TableRow key={row.name***REMOVED***>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                            ***REMOVED***row.manufacturer***REMOVED***\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">{row.name***REMOVED***</TableCell>\r\n                            <TableCell align=\"right\">{row.count***REMOVED***</TableCell>\r\n                        </TableRow>\r\n                    ))***REMOVED***\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n***REMOVED***\r\n\r\nexport default CartridgesTable;\r\n","import React from \"react\";\r\n\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Paper,\r\n***REMOVED*** from \"@material-ui/core\";\r\n\r\nimport { withStyles, makeStyles ***REMOVED*** from \"@material-ui/core/styles\";\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.primary.dark,\r\n    color: theme.palette.common.white,\r\n  ***REMOVED***,\r\n***REMOVED***))(TableCell);\r\n\r\n// const StyledTableRow = withStyles((theme) => ({\r\n//   root: {\r\n//     \"&:nth-of-type(odd)\": {\r\n//       backgroundColor: theme.palette.action.hover,\r\n//     ***REMOVED***,\r\n//   ***REMOVED***,\r\n// ***REMOVED***))(TableRow);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  outRow: {\r\n    backgroundColor: theme.palette.error.light,\r\n    color: theme.palette.common.white,\r\n  ***REMOVED***,\r\n  inRow: {\r\n    backgroundColor: theme.palette.success.light,\r\n  ***REMOVED***,\r\n***REMOVED***));\r\n\r\nexport default function SuppliesTable(props) {\r\n  const classes = useStyles();\r\n  const { supplies ***REMOVED*** = props;\r\n  const eleveation = props.elevation ? props.elevation : 5;\r\n\r\n  return (\r\n    <TableContainer component={Paper***REMOVED*** elevation={eleveation***REMOVED***>\r\n      <Table aria-label=\"cartridges table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell>Время</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Наименование</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Количество</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Комментарий</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n      ***REMOVED***supplies.map((row) => (\r\n            <TableRow\r\n              key={row.id***REMOVED***\r\n              className={row.out ? classes.outRow : classes.inRow***REMOVED***\r\n            >\r\n              <TableCell component=\"th\" scope=\"row\">\r\n            ***REMOVED***row.date***REMOVED***\r\n              </TableCell>\r\n              <TableCell align=\"right\">{row.cartridge_str***REMOVED***</TableCell>\r\n              <TableCell align=\"right\">\r\n            ***REMOVED***row.out ? row.count * -1 : row.count***REMOVED***\r\n              </TableCell>\r\n              <TableCell align=\"right\">{row.comment***REMOVED***</TableCell>\r\n            </TableRow>\r\n          ))***REMOVED***\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n***REMOVED***\r\n","const localization = {\r\n    pagination: {\r\n        labelDisplayedRows: \"{from***REMOVED***-{to***REMOVED*** из {count***REMOVED***\",\r\n        labelRowsSelect: \"строк\",\r\n    ***REMOVED***,\r\n    toolbar: {\r\n        nRowsSelected: \"{0***REMOVED*** перемещение(ий) выбрано\",\r\n        searchTooltip: \"Поиск\",\r\n        searchPlaceholder: \"Поиск\",\r\n        exportTitle: \"Экспорт\",\r\n        exportAriaLabel: \"Экспорт\",\r\n        exportName: \"Экспортировать в CSV\",\r\n    ***REMOVED***,\r\n    header: {\r\n        actions: \"Действия\",\r\n    ***REMOVED***,\r\n    body: {\r\n        emptyDataSourceMessage: \"Загрузка\",\r\n        addTooltip: \"Добавить\",\r\n        deleteTooltip: \"Удалить\",\r\n        editTooltip: \"Редактировать\",\r\n        filterRow: {\r\n            filterTooltip: \"Фильтр\",\r\n        ***REMOVED***,\r\n        editRow: {\r\n            deleteText: \"Удалить перемещение?\",\r\n            cancelTooltip: \"Отмена\",\r\n            saveTooltip: \"Подтвердить\",\r\n        ***REMOVED***,\r\n    ***REMOVED***,\r\n***REMOVED***;\r\n\r\nexport default localization;\r\n","import React from \"react\";\r\n\r\nimport { CheckCircle ***REMOVED*** from \"@material-ui/icons\";\r\nimport { Tooltip ***REMOVED*** from \"@material-ui/core\";\r\n\r\nfunction FinishedStatus() {\r\n    return (\r\n        <Tooltip title=\"Завершён\" aria-label=\"Завершён\">\r\n            <CheckCircle color=\"secondary\" />\r\n        </Tooltip>\r\n    );\r\n***REMOVED***\r\n\r\nexport default FinishedStatus;\r\n","import React from \"react\";\r\n\r\nimport { LocalShipping ***REMOVED*** from \"@material-ui/icons\";\r\nimport { Tooltip ***REMOVED*** from \"@material-ui/core\";\r\n\r\nfunction InWorkStatus() {\r\n    return (\r\n        <Tooltip title=\"В работе\" aria-label=\"В работе\">\r\n            <LocalShipping />\r\n        </Tooltip>\r\n    );\r\n***REMOVED***\r\n\r\nexport default InWorkStatus;\r\n","import React from \"react\";\r\nimport { makeStyles, useTheme ***REMOVED*** from \"@material-ui/core/styles\";\r\n\r\nimport { Paper ***REMOVED*** from \"@material-ui/core\";\r\n// import { DoneAll, CheckCircle, LocalShipping ***REMOVED*** from \"@material-ui/icons\";\r\n\r\nimport MaterialTable from \"material-table\";\r\nimport localization from \"../SuppliesEditable/localization\";\r\nimport FinishedStatus from \"./FinishedStatus\";\r\nimport InWorkStatus from \"./InWorkStatus\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        borderTop: theme.tables.borderSize,\r\n        borderTopColor: theme.palette.primary.light,\r\n        borderTopStyle: \"solid\",\r\n    ***REMOVED***,\r\n***REMOVED***));\r\n\r\nfunction OrdersTable({ data, cartridges ***REMOVED***) {\r\n    const classes = useStyles();\r\n\r\n    let cartridgesChoices = {***REMOVED***;\r\n    cartridges.forEach(\r\n        (item) =>\r\n            (cartridgesChoices[item.name***REMOVED*** = `${item.manufacturer***REMOVED*** ${item.name***REMOVED***`)\r\n    );\r\n\r\n    return (\r\n        <MaterialTable\r\n            isLoading={data.length > 0 ? false : true***REMOVED***\r\n            title=\"Заказы\"\r\n            localization={localization***REMOVED***\r\n            columns={[\r\n            ***REMOVED***\r\n                    title: \"Статус\",\r\n                    field: \"finished\",\r\n                    // editable: \"onUpdate\",\r\n                    initialEditValue: \"false\",\r\n                    lookup: {\r\n                        true: \"Завершён\",\r\n                        false: \"В работе\",\r\n                    ***REMOVED***,\r\n                    render: (rowData) =>\r\n                        rowData.finished ? (\r\n                            <FinishedStatus />\r\n                        ) : (\r\n                            <InWorkStatus />\r\n                        ),\r\n                ***REMOVED***,\r\n            ***REMOVED***\r\n                    title: \"Дата создания\",\r\n                    field: \"date\",\r\n                    type: \"datetime\",\r\n                    editable: \"never\",\r\n                ***REMOVED***,\r\n            ***REMOVED***\r\n                    title: \"Дата завершения\",\r\n                    field: \"date_finished\",\r\n                    type: \"datetime\",\r\n                    editable: \"never\",\r\n                    emptyValue: \"—\",\r\n                ***REMOVED***,\r\n            ***REMOVED***\r\n                    title: \"Номер\",\r\n                    field: \"number\",\r\n                    type: \"numeric\",\r\n                    emptyValue: \"Не определён\",\r\n                ***REMOVED***,\r\n            ***REMOVED***\r\n                    title: \"Картридж\",\r\n                    field: \"cartridge\",\r\n                    lookup: cartridgesChoices,\r\n                ***REMOVED***,\r\n            ***REMOVED***\r\n                    title: \"Количество\",\r\n                    field: \"count\",\r\n                    type: \"numeric\",\r\n                ***REMOVED***,\r\n            ***REMOVED******REMOVED***\r\n            data={data***REMOVED***\r\n            components={{\r\n                Container: (props) => (\r\n                    <Paper\r\n                    ***REMOVED***...props***REMOVED***\r\n                        elevation={useTheme().tables.elevation***REMOVED***\r\n                        className={classes.root***REMOVED***\r\n                    />\r\n                ),\r\n            ***REMOVED******REMOVED***\r\n            options={{\r\n                exportButton: true,\r\n                actionsColumnIndex: -1,\r\n            ***REMOVED******REMOVED***\r\n            actions={[\r\n                (rowData) => ({\r\n                    icon: \"check\",\r\n                    tooltip: rowData.finished ? undefined : \"Завершить заказ\",\r\n                    disabled: rowData.finished,\r\n                    onClick: (event, rowData) => {\r\n                        console.log(event, rowData);\r\n                        if (!rowData.finished) {\r\n                            alert(`Заказ ${rowData.number***REMOVED*** выполнен`);\r\n                        ***REMOVED*** else {\r\n                            alert(\r\n                                `Заказ ${rowData.number***REMOVED*** уже является выполненным`\r\n                            );\r\n                        ***REMOVED***\r\n                    ***REMOVED***,\r\n                ***REMOVED***),\r\n            ***REMOVED******REMOVED***\r\n            editable={{\r\n                onRowAdd: (newData) =>\r\n                    new Promise((resolve) => {\r\n                        console.log(newData);\r\n                        resolve();\r\n                    ***REMOVED***),\r\n                onRowUpdate: (newData) =>\r\n                    new Promise((resolve) => {\r\n                        console.log(newData);\r\n                        resolve();\r\n                    ***REMOVED***),\r\n                onRowDelete: (oldData) =>\r\n                    new Promise((resolve) => {\r\n                        console.log(oldData);\r\n                        resolve();\r\n                    ***REMOVED***),\r\n            ***REMOVED******REMOVED***\r\n        />\r\n    );\r\n***REMOVED***\r\n\r\nexport default OrdersTable;\r\n","import React from \"react\";\r\nimport { makeStyles, useTheme ***REMOVED*** from \"@material-ui/core/styles\";\r\n\r\nimport { Paper ***REMOVED*** from \"@material-ui/core\";\r\n\r\nimport tinycolor from \"tinycolor2\";\r\n\r\nimport MaterialTable from \"material-table\";\r\nimport localization from \"./localization\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        borderTop: theme.tables.borderSize,\r\n        borderTopColor: theme.palette.primary.light,\r\n        borderTopStyle: \"solid\",\r\n    ***REMOVED***,\r\n***REMOVED***));\r\n\r\nconst prepareData = (supply) => {\r\n    supply.out = supply.out === \"true\" || supply.out === true ? true : false;\r\n    return supply;\r\n***REMOVED***;\r\n\r\nfunction SuppliesEditable(props) {\r\n    const {\r\n        data,\r\n        cartridges,\r\n        handleSupplyDelete,\r\n        handleSupplyUpdate,\r\n        handleSupplyCreate,\r\n    ***REMOVED*** = props;\r\n\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const rowStyles = {\r\n        outRow: {\r\n            backgroundColor: tinycolor(theme.palette.error.light).lighten(20),\r\n        ***REMOVED***,\r\n        inRow: {\r\n            backgroundColor: tinycolor(theme.palette.success.light).lighten(24),\r\n        ***REMOVED***,\r\n    ***REMOVED***;\r\n\r\n    let cartridgesChoices = {***REMOVED***;\r\n    cartridges.forEach(\r\n        (item) =>\r\n            (cartridgesChoices[item.name***REMOVED*** = `${item.manufacturer***REMOVED*** ${item.name***REMOVED***`)\r\n    );\r\n\r\n    const columns = [\r\n    ***REMOVED*** title: \"Дата\", field: \"date\", type: \"datetime\", editable: \"never\" ***REMOVED***,\r\n    ***REMOVED***\r\n            title: \"Событие\",\r\n            field: \"out\",\r\n            initialEditValue: \"true\",\r\n            lookup: { true: \"Выдача\", false: \"Поступление\" ***REMOVED***,\r\n        ***REMOVED***,\r\n    ***REMOVED***\r\n            title: \"Картридж\",\r\n            field: \"cartridge\",\r\n            lookup: cartridgesChoices,\r\n        ***REMOVED***,\r\n    ***REMOVED*** title: \"Количество\", field: \"count\", type: \"numeric\" ***REMOVED***,\r\n    ***REMOVED*** title: \"Комментарий\", field: \"comment\" ***REMOVED***,\r\n    ***REMOVED***;\r\n\r\n    return (\r\n        <MaterialTable\r\n            isLoading={data.length > 0 ? false : true***REMOVED***\r\n            components={{\r\n                Container: (props) => (\r\n                    <Paper\r\n                    ***REMOVED***...props***REMOVED***\r\n                        elevation={theme.tables.elevation***REMOVED***\r\n                        className={classes.root***REMOVED***\r\n                    />\r\n                ),\r\n            ***REMOVED******REMOVED***\r\n            localization={localization***REMOVED***\r\n            title=\"Перемещение Картриджей\"\r\n            columns={columns***REMOVED***\r\n            data={data***REMOVED***\r\n            options={{\r\n                exportButton: true,\r\n                actionsColumnIndex: -1,\r\n                // emptyRowsWhenPaging: true,\r\n                // paging: false,\r\n                rowStyle: (rowData) =>\r\n                    rowData.out ? rowStyles.outRow : rowStyles.inRow,\r\n            ***REMOVED******REMOVED***\r\n            editable={{\r\n                onRowAdd: (newData) =>\r\n                    new Promise((resolve) => {\r\n                        handleSupplyCreate(prepareData(newData));\r\n                        resolve();\r\n                    ***REMOVED***),\r\n                onRowUpdate: (newData) =>\r\n                    new Promise((resolve) => {\r\n                        handleSupplyUpdate(prepareData(newData));\r\n                        resolve();\r\n                    ***REMOVED***),\r\n                onRowDelete: (oldData) =>\r\n                    new Promise((resolve) => {\r\n                        handleSupplyDelete(oldData.id);\r\n                        resolve();\r\n                    ***REMOVED***),\r\n            ***REMOVED******REMOVED***\r\n        />\r\n    );\r\n***REMOVED***\r\n\r\nexport default SuppliesEditable;\r\n","import React from \"react\";\r\nimport {\r\n    AppBar,\r\n    Toolbar,\r\n    Typography,\r\n    IconButton,\r\n    Tooltip,\r\n***REMOVED*** from \"@material-ui/core\";\r\nimport { Http, SupervisedUserCircle ***REMOVED*** from \"@material-ui/icons\";\r\nimport { makeStyles ***REMOVED*** from \"@material-ui/core/styles\";\r\nimport { useHistory ***REMOVED*** from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    ***REMOVED***,\r\n    title: {\r\n        flexGrow: 1,\r\n    ***REMOVED***,\r\n    // button: {\r\n    //     marginRight: theme.spacing(2),\r\n    // ***REMOVED***,\r\n***REMOVED***));\r\n\r\nfunction NavBar({ title ***REMOVED***) {\r\n    const classes = useStyles();\r\n\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <div>\r\n            <AppBar position=\"static\">\r\n                <Toolbar variant=\"regular\">\r\n                    <Typography\r\n                        className={classes.title***REMOVED***\r\n                        variant=\"h6\"\r\n                        color=\"inherit\">\r\n                    ***REMOVED***title***REMOVED***\r\n                    </Typography>\r\n                    <Tooltip title=\"REST API\" arrow>\r\n                        <IconButton\r\n                            onClick={() => {\r\n                                history.push(\"/api\");\r\n                                window.location.reload();\r\n                            ***REMOVED******REMOVED***\r\n                            color=\"inherit\"\r\n                            aria-label=\"REST\">\r\n                            <Http fontSize=\"large\" />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                    <Tooltip title=\"Админка\" arrow>\r\n                        <IconButton\r\n                            onClick={() => {\r\n                                history.push(\"/admin\");\r\n                                window.location.reload();\r\n                            ***REMOVED******REMOVED***\r\n                            color=\"inherit\"\r\n                            aria-label=\"Admin\">\r\n                            <SupervisedUserCircle fontSize=\"large\" />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                ***REMOVED***/* <Button color=\"inherit\">\r\n                        <Tooltip title=\"REST API\">\r\n                            <Http />\r\n                        </Tooltip>\r\n                    </Button> */***REMOVED***\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n***REMOVED***\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\n\r\nfunction Test() {\r\n    return (\r\n        <div>\r\n            <h1>Test page</h1>\r\n        </div>\r\n    );\r\n***REMOVED***\r\n\r\nexport default Test;\r\n","import axios from \"axios\";\r\n\r\nexport const api = axios.create({\r\n    baseURL: \"http://ps-bykrc.dellin.local/api/\",\r\n    // baseURL: \"http://127.0.0.1:8000/api/\",\r\n    responseType: \"json\",\r\n***REMOVED***);\r\n","import { api ***REMOVED*** from \"./api\";\r\n\r\nexport const ordersDao = {\r\n    getAll: async () => {\r\n        const response = await api.get(\"orders/\");\r\n        // console.log(\"supplyDao.getAll:\", response);\r\n        return response.data;\r\n    ***REMOVED***,\r\n    create: async (order) => {\r\n        api.post(`orders/`, order);\r\n        // console.log(\"ordersDao.create:\", order);\r\n    ***REMOVED***,\r\n    update: async (order) => {\r\n        api.put(`orders/${order.id***REMOVED***/`, order);\r\n    ***REMOVED***,\r\n    delete: async (id) => {\r\n        api.delete(`orders/${id***REMOVED***/`);\r\n    ***REMOVED***,\r\n***REMOVED***;\r\n","// import { createSupply, fetchSupplies, updateSupply, deleteSupply ***REMOVED*** from \"./\";\r\nimport { api ***REMOVED*** from \"./api\";\r\n\r\nexport const supplyDao = {\r\n    getAll: async () => {\r\n        const supplies = await api.get(\"supplies/\");\r\n        // console.log(\"fetchSupplies:\", supplies);\r\n        return supplies.data;\r\n    ***REMOVED***,\r\n    create: async (supply) => {\r\n        api.post(`supplies/`, supply);\r\n        // console.log(\"createSupply:\", supply);\r\n    ***REMOVED***,\r\n    update: async (supply) => {\r\n        api.put(`supplies/${supply.id***REMOVED***/`, supply);\r\n    ***REMOVED***,\r\n    delete: async (id) => {\r\n        api.delete(`supplies/${id***REMOVED***/`);\r\n    ***REMOVED***,\r\n***REMOVED***;\r\n","import { api ***REMOVED*** from \"./api\";\r\n\r\nexport const cartridgeDao = {\r\n    getAll: async () => {\r\n        const response = await api.get(\"cartridges/\");\r\n        return response.data;\r\n    ***REMOVED***,\r\n    // create: async (order) => {\r\n    //     api.post(`orders/`, order).catch((reason) => {\r\n    //         console.log(\"ordersDao: \", reason.response.data);\r\n    //     ***REMOVED***);\r\n    //     console.log(\"ordersDao.create:\", order);\r\n    // ***REMOVED***,\r\n    // update: async (order) => {\r\n    //     api.put(`orders/${order.id***REMOVED***/`, order);\r\n    // ***REMOVED***,\r\n    // delete: async (id) => {\r\n    //     api.delete(`orders/${id***REMOVED***/`);\r\n    // ***REMOVED***,\r\n***REMOVED***;\r\n","import React, { Component ***REMOVED*** from \"react\";\r\n\r\nimport { Grid ***REMOVED*** from \"@material-ui/core\";\r\n\r\nimport { withSnackbar ***REMOVED*** from \"notistack\";\r\n\r\nimport { CartridesTable, SuppliesEditable, OrdersTable ***REMOVED*** from \"../components\";\r\nimport { ordersDao ***REMOVED*** from \"../api/orderDao\";\r\nimport { supplyDao ***REMOVED*** from \"../api/supplyDao\";\r\nimport { cartridgeDao ***REMOVED*** from \"../api/cartridgeDao\";\r\n\r\nclass Home extends Component {\r\n    state = {\r\n        cartridgesData: [***REMOVED***,\r\n        suppliesData: [***REMOVED***,\r\n        ordersData: [***REMOVED***,\r\n    ***REMOVED***;\r\n\r\n    dispError = (msg) => {\r\n        this.props.enqueueSnackbar(msg, { variant: \"error\" ***REMOVED***);\r\n        console.log(\"dispError:\", msg);\r\n    ***REMOVED***;\r\n\r\n    dispSuccess = (msg) => {\r\n        this.props.enqueueSnackbar(msg, { variant: \"success\" ***REMOVED***);\r\n    ***REMOVED***;\r\n\r\n    dispMsg = (msg) => {\r\n        this.props.enqueueSnackbar(msg);\r\n    ***REMOVED***;\r\n\r\n    handleRefresh = () => {\r\n        cartridgeDao\r\n            .getAll()\r\n            .catch((reason) => this.dispError(reason))\r\n            .then((value) => this.setState({ cartridgesData: value ***REMOVED***));\r\n\r\n        supplyDao\r\n            .getAll()\r\n            .catch((reason) => this.dispError(reason))\r\n            .then((value) => this.setState({ suppliesData: value ***REMOVED***));\r\n\r\n        // const supplies = await fetchSupplies();\r\n        ordersDao\r\n            .getAll()\r\n            .catch((reason) => this.dispError(reason))\r\n            .then((value) => this.setState({ ordersData: value ***REMOVED***));\r\n\r\n        // this.setState({\r\n        //     cartridgesData: cartridges,\r\n        //     suppliesData: supplies,\r\n        //     ordersData: orders,\r\n        // ***REMOVED***);\r\n    ***REMOVED***;\r\n\r\n    handleSupplyDelete = (id) => {\r\n        supplyDao\r\n            .delete(id)\r\n            .catch((reason) => {\r\n                this.dispError(\"Не удалось выполнить удаление: \\n\" + reason);\r\n            ***REMOVED***)\r\n            .then(() => {\r\n                this.handleRefresh();\r\n                this.dispSuccess(`Перемещение №${id***REMOVED*** удалено успешно!`);\r\n            ***REMOVED***);\r\n    ***REMOVED***;\r\n\r\n    handleSupplyCreate = (supply) => {\r\n        supplyDao\r\n            .create(supply)\r\n            .catch((reason) => this.dispError(reason))\r\n            .then((value) => {\r\n                console.log(\"handleSupplyCreate.then:\", value);\r\n                this.handleRefresh();\r\n                this.dispSuccess(`Перемещение создано успешно!`);\r\n            ***REMOVED***);\r\n        // await createSupply(supply);\r\n        // await this.handleRefresh();\r\n    ***REMOVED***;\r\n\r\n    handleSupplyUpdate = (supply) => {\r\n        supplyDao\r\n            .update(supply)\r\n            .catch((reason) =>\r\n                this.dispError(\"Не удалось выполнить удаление: \\n\" + reason)\r\n            )\r\n            .then((value) => {\r\n                this.handleRefresh();\r\n                this.dispSuccess(\r\n                    `Перемещение №${supply.id***REMOVED*** обновлено успешно!`\r\n                );\r\n            ***REMOVED***);\r\n    ***REMOVED***;\r\n\r\n    async componentDidMount() {\r\n        await this.handleRefresh();\r\n    ***REMOVED***\r\n\r\n    render() {\r\n        const { cartridgesData, suppliesData, ordersData ***REMOVED*** = this.state;\r\n\r\n        return (\r\n            <Grid container spacing={3***REMOVED***>\r\n                <Grid key=\"cartridges\" xs={12***REMOVED*** lg={4***REMOVED*** item>\r\n                    <CartridesTable cartridges={cartridgesData***REMOVED*** />\r\n                </Grid>\r\n                <Grid key=\"supplies\" xs={12***REMOVED*** lg={8***REMOVED*** item>\r\n                    <SuppliesEditable\r\n                        data={suppliesData***REMOVED***\r\n                        cartridges={cartridgesData***REMOVED***\r\n                        handleSupplyDelete={this.handleSupplyDelete***REMOVED***\r\n                        handleSupplyCreate={this.handleSupplyCreate***REMOVED***\r\n                        handleSupplyUpdate={this.handleSupplyUpdate***REMOVED***\r\n                    />\r\n                </Grid>\r\n                <Grid key=\"orders\" xs={12***REMOVED*** lg={12***REMOVED*** item>\r\n                    <OrdersTable\r\n                        data={ordersData***REMOVED***\r\n                        cartridges={cartridgesData***REMOVED***\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    ***REMOVED***\r\n***REMOVED***\r\n\r\nexport default withSnackbar(Home);\r\n","import { BrowserRouter, Switch, Route ***REMOVED*** from \"react-router-dom\";\r\n\r\nimport { Container, IconButton ***REMOVED*** from \"@material-ui/core\";\r\nimport {\r\n    MuiThemeProvider,\r\n    createMuiTheme,\r\n    responsiveFontSizes,\r\n***REMOVED*** from \"@material-ui/core/styles\";\r\nimport { Close ***REMOVED*** from \"@material-ui/icons\";\r\n\r\nimport { green, blue ***REMOVED*** from \"@material-ui/core/colors\";\r\n\r\nimport { SnackbarProvider ***REMOVED*** from \"notistack\";\r\n\r\nimport React, { Component ***REMOVED*** from \"react\";\r\n\r\nimport { NavBar ***REMOVED*** from \"./components\";\r\n\r\nimport Test from \"./pages/Test\";\r\nimport Home from \"./pages/Home\";\r\n\r\n// import styles from \"./App.css\";\r\n\r\nexport class App extends Component {\r\n    state = {\r\n        navbarTitle: \"РЦ Валищево • Картриджи\",\r\n        theme: responsiveFontSizes(\r\n            createMuiTheme({\r\n                palette: {\r\n                    // type: \"dark\",\r\n                    primary: blue,\r\n                    secondary: green,\r\n                ***REMOVED***,\r\n                tables: {\r\n                    borderSize: \"0.5rem\",\r\n                    elevation: 5,\r\n                ***REMOVED***,\r\n                // status: {\r\n                //   danger: \"orange\",\r\n                // ***REMOVED***,\r\n            ***REMOVED***)\r\n        ),\r\n    ***REMOVED***;\r\n\r\n    notistackRef = React.createRef();\r\n    onClickDismiss = (key) => () => {\r\n        this.notistackRef.current.closeSnackbar(key);\r\n    ***REMOVED***;\r\n\r\n    render() {\r\n        const { navbarTitle, theme ***REMOVED*** = this.state;\r\n\r\n        return (\r\n            <BrowserRouter>\r\n                <MuiThemeProvider theme={theme***REMOVED***>\r\n                    <SnackbarProvider\r\n                        maxSnack={3***REMOVED***\r\n                        ref={this.notistackRef***REMOVED***\r\n                        action={(key) => (\r\n                            <IconButton\r\n                                onClick={this.onClickDismiss(key)***REMOVED***\r\n                                color=\"inherit\">\r\n                                <Close />\r\n                            </IconButton>\r\n                        )***REMOVED***>\r\n                        <NavBar title={navbarTitle***REMOVED*** />\r\n                        <Container\r\n                            style={{ paddingTop: 5 + \"%\" ***REMOVED******REMOVED***\r\n                            maxWidth=\"lg\">\r\n                            <Switch>\r\n                                <Route path=\"/\" exact component={Home***REMOVED*** />\r\n                                <Route path=\"/test\" exact component={Test***REMOVED*** />\r\n                            </Switch>\r\n                        </Container>\r\n                    </SnackbarProvider>\r\n                </MuiThemeProvider>\r\n            </BrowserRouter>\r\n        );\r\n    ***REMOVED***\r\n***REMOVED***\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1***REMOVED*** is the IPv6 localhost address.\n    window.location.hostname === '[::1***REMOVED***' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5***REMOVED***|2[0-4***REMOVED***[0-9***REMOVED***|[01***REMOVED***?[0-9***REMOVED***[0-9***REMOVED***?)){3***REMOVED***$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    ***REMOVED***\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL***REMOVED***/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        ***REMOVED***);\n      ***REMOVED*** else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      ***REMOVED***\n    ***REMOVED***);\n  ***REMOVED***\n***REMOVED***\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        ***REMOVED***\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              ***REMOVED***\n            ***REMOVED*** else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              ***REMOVED***\n            ***REMOVED***\n          ***REMOVED***\n        ***REMOVED***;\n      ***REMOVED***;\n    ***REMOVED***)\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    ***REMOVED***);\n***REMOVED***\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' ***REMOVED***,\n  ***REMOVED***)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          ***REMOVED***);\n        ***REMOVED***);\n      ***REMOVED*** else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      ***REMOVED***\n    ***REMOVED***)\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    ***REMOVED***);\n***REMOVED***\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      ***REMOVED***)\n      .catch(error => {\n        console.error(error.message);\n      ***REMOVED***);\n  ***REMOVED***\n***REMOVED***\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"***REMOVED***,"sourceRoot":""***REMOVED***